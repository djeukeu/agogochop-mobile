default_platform(:ios)

platform :ios do

  before_all do
      
    setup_ci

  end

  desc "Submit a new Beta apk for testing"
  lane :beta do

    api_key = app_store_connect_api_key(
      key_id: ENV['APPLE_KEY_ID'],
      issuer_id: ENV['APPLE_KEY_ISSUER_ID'],
      key_content: ENV['APPLE_KEY_CONTENT'],
    )

    use_workspace = !ENV['IOS_WORKSPACE_PATH'].empty?

    match(
      readonly: true,
      git_basic_authorization: Base64.strict_encode64(ENV['MATCH_GIT_TOKEN']),
      api_key: api_key
    )

    build_app(
      workspace: use_workspace ? ENV['IOS_WORKSPACE_PATH'] : nil,
      scheme: "agogochop",
      silent: true,
      output_directory: File.dirname(ENV['IOS_OUTPUT_PATH']),
      output_name: File.basename(ENV['IOS_OUTPUT_PATH']),
      clean: true,
      export_method: "app-store",
      export_team_id: ENV['APPLE_TEAM_ID'],
      export_options: {
        provisioningProfiles: {
          "com.agogochop.marketplace" => "match AppStore com.agogochop.marketplace",
        },
      }
    )

    upload_to_testflight(
      ipa: File.join(File.dirname(ENV['IOS_OUTPUT_PATH']), File.basename(ENV['IOS_OUTPUT_PATH'])),
      api_key: api_key,
      changelog: "Happy Testing !!!ðŸ˜„",
      groups: ENV['IOS_TEST_GROUPS'],
      distribute_external: true,
    )

  end

  desc "Submit a new apk for release"
  lane :release do

    api_key = app_store_connect_api_key(
      key_id: ENV['APPLE_KEY_ID'],
      issuer_id: ENV['APPLE_KEY_ISSUER_ID'],
      key_content: ENV['APPLE_KEY_CONTENT'],
    )

    use_workspace = !ENV['IOS_WORKSPACE_PATH'].empty?

    match(
      readonly: true,
      git_basic_authorization: Base64.strict_encode64(ENV['MATCH_GIT_TOKEN']),
      api_key: api_key
    )

    build_app(
      workspace: use_workspace ? ENV['IOS_WORKSPACE_PATH'] : nil,
      scheme: "genius",
      silent: true,
      output_directory: File.dirname(ENV['IOS_OUTPUT_PATH']),
      output_name: File.basename(ENV['IOS_OUTPUT_PATH']),
      clean: true,
      export_method: "app-store",
      export_team_id: ENV['APPLE_TEAM_ID'],
      export_options: {
        provisioningProfiles: {
          "link.genius.home" => "match AppStore link.genius.home",
        },
      }
    )

    upload_to_app_store(
      api_key: api_key,
      ipa: File.join(File.dirname(ENV['IOS_OUTPUT_PATH']), File.basename(ENV['IOS_OUTPUT_PATH'])),
      submit_for_review: true,
      automatic_release: true,
      force: true,
      precheck_include_in_app_purchases: false,
      submission_information: {
        add_id_info_limits_tracking: true,
        add_id_info_serves_ads: false,
        add_id_info_tracks_action: true,
        add_id_info_tracks_install: true,
        add_id_info_uses_idfa: true,
        content_rights_has_rights: true,
        content_rights_contains_third_party_content: true,
        export_compliance_platform: 'ios',
        export_compliance_compliance_required: false,
        export_compliance_encryption_updated: false,
        export_compliance_app_type: nil,
        export_compliance_uses_encryption: false,
        export_compliance_is_exempt: false,
        export_compliance_contains_third_party_cryptography: false,
        export_compliance_contains_proprietary_cryptography: false,
        export_compliance_available_on_french_store: false
      }
    )
  end
  
end
